#!/bin/sh

COPYRIGHT="
Copyright (C) 2012,2014 A. Gordon (assafgordon@gmail.com)
License: GPLv3+
"

##
## creates a big empty/sparse file named "balloon_X"
##

die()
{
    BASE=$(basename -- "$0")
    echo "$BASE: error: $@" >&2
    exit 1
}

usage()
{
	BASE=$(basename $0)
	echo "
Make-Ballon - create big empty files in the current directory.
Version: @VERSION@
$COPYRIGHT
Usage:
  $BASE [SIZE]

Examples:
  $BASE 100M
  $BASE 30G

Note:
  Files will be automatically named 'balloon_NNN' where NNN is the next available number
  (e.g. balloon_1, balloon_2, balloon_3 ... balloon_51 ...

"
    exit
}

SIZE=$1
test -z "$SIZE" && die "missing SIZE parameter. See --help for detauls"
test "x$1" = "x-h" || test "x$1" = "--help" && usage

echo "$SIZE" | grep -qE "^[0-9]+(K|KB|M|MB|G|GB|)?$" \
    || die "invalid size '$SIZE'. See --help for details"

## find any existing ballons, create the next one
LAST_BALLOON=$(ls balloon* 2>/dev/null \
               | sed -r 's/balloon_?//' | sort -n | tail -n 1)
if [ -z "$LAST_BALLOON" ]; then
	BALLOON=1
else
	LAST_BALLOON=${LAST_BALLOON#0}
	BALLOON=$((LAST_BALLOON + 1))
fi
echo "Creating balloon $BALLOON with size $SIZE"

FS_TYPE=$(stat --file-system -c %T .)

if [ "$FS_TYPE" = "nfs" -o "$FS_TYPE" = "cifs" ]; then
	dd if=/dev/zero of="balloon_$BALLOON" bs=1 count=1 seek="$SIZE"
else
	# on local file systems, we can't use the "seek" parameter to create an empty file.
	# this file system - most likely they support "sparse" files,
	# which beats the purpose of filling up the disk.

	BLOCK=$(stat -c %o .) || exit 1

	##Poor man's human-size expander
	SIZE=${SIZE/GB/000000000}
	SIZE=${SIZE/G/000000000}
	SIZE=${SIZE/MB/000000}
	SIZE=${SIZE/M/000000}
	SIZE=${SIZE/K/000}
	SIZE=${SIZE/KB/000}

	let COUNT=$SIZE/$BLOCK

	dd if=/dev/zero of="balloon_$BALLOON" bs=$BLOCK count=$COUNT
fi
