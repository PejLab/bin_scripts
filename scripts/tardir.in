#!/bin/bash

# @autogenerated_warning@
# @autogenerated_timestamp@
# @PACKAGE@ @VERSION@
# @PACKAGE_URL@

COPYRIGHT="
Copyright (C) 2013-2014 A. Gordon (assafgordon@gmail.com)
License: GPLv3+
"

##
## Packs the files in the current directory into a time-staped tarball.
## Prints the tarball name on the screen
## In the tarball, the files will be prefixed with a directory AND a time-stamp.
##

die()
{
    BASE=$(basename -- "$0")
    echo "$BASE: error: $@" >&2
    exit 1
}


usage()
{
	BASE=$(basename $0)
	echo "
tardir - Packs the files in the current directory into a tar-ball.
Version: @VERSION@
$COPYRIGHT
See: @PACKAGE_URL@

Usage:
  $BASE [DIR]

All files in directory DIR (or current directroy if non specified)
will be packaged into a tar-ball with a unique name.

1. The tarball wil be named as the current directory, with a time-stamp.
2. The files in the tarball will have the time-stamp directrory prefix.
3. The name of the tarball will be printed to screen.
4. Hidden directories and files (e.g. '.git' and '.hg') are skipped.

Example:

# Given the following directory:

 $ cd my_project
 $ find
 1.txt
 2.txt
 3/3.txt

Running $BASE will create 'my_project_2013-08-31_101259.tar.bz2',
with the following files:
 my_project_2013-08-31_101259/1.txt
 my_project_2013-08-31_101259/2.txt
 my_project_2013-08-31_101259/3/3.txt

"
    exit
}

test "x$1" = "x-h" || test "x$1" = "x--help" && usage

if test -z "$1" ; then
    # Get the name of the current directory
    BASE=$(basename -- "$PWD") || exit
    DIRNAME=.
    echo "Archiving current directory '$PWD'..."
else
    # Use given parameter
    BASE=$(basename -- "$1") || exit
    test -d "$1" || die "error: '$1' is not a directory"
    DIRNAME="$1"
    echo "Archiving directory '$1'..."
fi

# Add time-stamp
BASETIME=${BASE}-$(date +%F-%H%M%S) || exit

# Name of the final Tarball output file
TARBALL="$PWD/${BASETIME}.tar.bz2"


## The "--transform" adds the time-stamped directory prefix to each file name.
## The "find" returns a list of files to compress, skipping hidden directories (e.g. ".git" ".hg")
##   and previous tar-balls.

cd "$DIRNAME"
find . \( ! -regex '.*/\..*' \) \
       \( ! -regex "^./${BASE}.*tar\.*" \) -type f | \
     tar --files-from=- \
         -cjf "$TARBALL" \
         --transform "s;\./;$BASETIME/;" \
     || die "failed to archive directory '$DIRNAME' into '$TARBALL'"

echo "Done!"
echo "  Tarball = $TARBALL"
echo
