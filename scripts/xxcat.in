#!/bin/sh

COPYRIGHT="
Copyright (C) 2012-2014 A. Gordon (assafgordon@gmail.com)
License: GPLv3+
"

##
## This script takes one input file, and print it to the STDOUT.
## If the file is compressed, it will be automatically uncompressed (gzip/bzip2/xz)
##
##
##
## TODO:
##  1. Accept multiple files as parameters
##  2. Add "pv" (pipeviewer) visualization

die()
{
    BASE=$(basename -- "$0")
    echo "$BASE: error: $@" >&2
    exit 1
}

usage()
{
	BASENAME=$(basename "$0")
	echo "$BASENAME - prints a (possibly compressed) file to STDOUT
Version @VERSION@
$COPYRIGHT
Usage: $BASENAME [FILE]

FILE must be a regular file (can't be STDIN, pipes, etc.).
The file type is checked (using 'file'). If the file is compressed
with GZIP or BZIP2 or XZ, the output will be uncompressed.
(The original file is not changed).

Example:
	\$ cat hello.txt
	Hello World

	\$ gzip -c < hello.txt > hello.txt.gz
	\$ bzip2 -c < hello.txt > hello.txt.bz2

	\$ xxcat hello.txt
	Hello World
	\$ xxcat hello.txt.gz
	Hello World
	\$ xxcat hello.txt.bz2
	Hello World

"
	exit 1
}

INPUT="$1"
test -z "$1" && die "missing file name. See --help for details."
test "x$1" = "x-h" || test "x$1" = "x--help" && usage

test -r "$INPUT" || die "can't find input file '$INPUT'"

test -f "$INPUT" \
    || die "input file '$INPUT' is not a regular file" \
            "(this script can't handle pipes, sockets, etc.)"

#automatically ungzip files, in needed
MIME=$(file -bi -- "$INPUT") || die "'file' failed on '$INPUT'"

# Trim optional character set information
MIME=${MIME%; charset=*}

if [ "$MIME" = "application/gzip" ] \
    || [ "$MIME" = "application/x-gzip" ] ; then
	gunzip -d -c "$INPUT" || die "gunzip failed on '$INPUT'"
elif [ "$MIME" = "application/x-bzip2" ] \
    || [ "$MIME" = "application/bzip2" ] ; then
	bunzip2 -d -c "$INPUT" || die "bunzip2 failed on '$INPUT'"
elif [ "$MIME" = "application/x-xz" ] \
    || [ "$MIME" = "application/xz" ] ; then
	xz -d -c "$INPUT" || die "xz failed on '$INPUT'"
else
	cat "$INPUT" || die "cat failed on '$INPUT'"
fi
